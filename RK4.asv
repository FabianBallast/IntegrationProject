function [x] = RK4(t, x0, ODE)
%RK4 Runge-Kutta 4th-order method of integration
%   Input:
%     t   - Array of size (1 x n) with all time stamps. t(1) = 0.
%     x0  - Initial conditions of the state of size (m x 1).
%     ODE - Function that returns derivatives of system given a state.
%         - That is, x_dot = ODE(x)
%
%   Output:
%      x  - Array of size (m x n) with all positions over time. 

    dt = ti(2);
    n = length(t);
    m = length(x0);
   
    x = zeros(m, n);
    x(:, 1) = x0;
    
    for i = 2:n
        k1 = ODE(x(:, i-1), findM, findF);
        k2 = ODE(x(:, i-1) + dt*k1/2, findM, findF);
        k3 = ODE(x(:, i-1) + dt*k2/2, findM, findF);
        k4 = ODE(x(:, i-1) + dt*k3, findM, findF);
        x_temp = x(:, i-1) + 1/6 * dt * (k1 + 2* k2 + 2*k3 + k4);
        x(:, i) = projection(x_temp, findC, findCd);
        lambda(:,i) = 1/6 * (lambda1 + 2* lambda2 + 2*lambda3 + lambda4);
        acc(:,i) = 1/6 * (k1(4:6) + 2* k2(4:6) + 2*k3(4:6) + k4(4:6));
    end
end
end

